{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tom\\\\Documents\\\\Repos\\\\ImageGlitcher\\\\image-glitcher\\\\src\\\\AnimationPreview.tsx\";\nimport React from 'react';\nimport { Colors } from './Colors';\nimport { Styles } from './Styles';\nexport class AnimationPreview extends React.Component {\n  render() {\n    let containerStyle = {\n      padding: \"16px\",\n      background: Colors.background,\n      borderWidth: 1,\n      borderStyle: \"solid\",\n      borderColor: Colors.border,\n      display: \"inline-block\"\n    };\n    let downloadButton = this.props.isLoading || this.props.url == \"\" ? null : /*#__PURE__*/React.createElement(\"a\", {\n      href: this.props.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 84\n      }\n    }, \"Download\");\n    let imagePreview = this.props.isLoading ? null : /*#__PURE__*/React.createElement(\"img\", {\n      style: Styles.imageStyle,\n      src: this.props.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 58\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: containerStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: Styles.h1Style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, \"Animation\"), imagePreview, downloadButton);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Tom/Documents/Repos/ImageGlitcher/image-glitcher/src/AnimationPreview.tsx"],"names":["React","Colors","Styles","AnimationPreview","Component","render","containerStyle","padding","background","borderWidth","borderStyle","borderColor","border","display","downloadButton","props","isLoading","url","imagePreview","imageStyle","h1Style"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,MAAT,QAAuB,UAAvB;AAQA,OAAO,MAAMC,gBAAN,SAA+BH,KAAK,CAACI,SAArC,CACP;AACIC,EAAAA,MAAM,GACN;AACI,QAAIC,cAAoC,GACxC;AACIC,MAAAA,OAAO,EAAE,MADb;AAEIC,MAAAA,UAAU,EAAEP,MAAM,CAACO,UAFvB;AAGIC,MAAAA,WAAW,EAAE,CAHjB;AAIIC,MAAAA,WAAW,EAAE,OAJjB;AAKIC,MAAAA,WAAW,EAAEV,MAAM,CAACW,MALxB;AAMIC,MAAAA,OAAO,EAAE;AANb,KADA;AAUA,QAAIC,cAAc,GAAG,KAAKC,KAAL,CAAWC,SAAX,IAAwB,KAAKD,KAAL,CAAWE,GAAX,IAAkB,EAA1C,GAA+C,IAA/C,gBAAsD;AAAG,MAAA,IAAI,EAAE,KAAKF,KAAL,CAAWE,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA3E;AACA,QAAIC,YAAY,GAAG,KAAKH,KAAL,CAAWC,SAAX,GAAuB,IAAvB,gBAA8B;AAAK,MAAA,KAAK,EAAEd,MAAM,CAACiB,UAAnB;AAA+B,MAAA,GAAG,EAAE,KAAKJ,KAAL,CAAWE,GAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjD;AAEA,wBACI;AAAK,MAAA,KAAK,EAAEX,cAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,KAAK,EAAEJ,MAAM,CAACkB,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEKF,YAFL,EAGKJ,cAHL,CADJ;AAOH;;AAvBL","sourcesContent":["import React from 'react';\r\nimport { Colors } from './Colors';\r\nimport { Styles } from './Styles';\r\n\r\ninterface AnimationPreviewProps\r\n{\r\n    url : string,\r\n    isLoading : boolean\r\n}\r\n\r\nexport class AnimationPreview extends React.Component<AnimationPreviewProps>\r\n{\r\n    render()\r\n    {\r\n        let containerStyle : React.CSSProperties = \r\n        {\r\n            padding: \"16px\",\r\n            background: Colors.background,\r\n            borderWidth: 1,\r\n            borderStyle: \"solid\",\r\n            borderColor: Colors.border,\r\n            display: \"inline-block\"\r\n        };\r\n\r\n        let downloadButton = this.props.isLoading || this.props.url == \"\" ? null : <a href={this.props.url}>Download</a>;\r\n        let imagePreview = this.props.isLoading ? null : <img style={Styles.imageStyle} src={this.props.url}/>;\r\n\r\n        return (\r\n            <div style={containerStyle}>\r\n                <h1 style={Styles.h1Style}>Animation</h1>\r\n                {imagePreview}\r\n                {downloadButton}\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}
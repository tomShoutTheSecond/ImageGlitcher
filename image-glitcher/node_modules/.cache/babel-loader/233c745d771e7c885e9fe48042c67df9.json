{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Tom\\\\Documents\\\\Repos\\\\ImageGlitcher\\\\image-glitcher\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Tom\\\\Documents\\\\Repos\\\\ImageGlitcher\\\\image-glitcher\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _createSuper from\"C:\\\\Users\\\\Tom\\\\Documents\\\\Repos\\\\ImageGlitcher\\\\image-glitcher\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _inherits from\"C:\\\\Users\\\\Tom\\\\Documents\\\\Repos\\\\ImageGlitcher\\\\image-glitcher\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import{State}from'./App';import{Colors}from'./Colors';import{Styles}from'./Styles';export var ImageLoader=/*#__PURE__*/function(_React$Component){_inherits(ImageLoader,_React$Component);var _super=_createSuper(ImageLoader);function ImageLoader(){var _this;_classCallCheck(this,ImageLoader);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={previewUrl:\"\"};return _this;}_createClass(ImageLoader,[{key:\"render\",value:function render(){var _this2=this;var containerStyle={padding:\"16px\",background:Colors.background,borderWidth:1,borderStyle:\"solid\",borderColor:Colors.border,display:\"inline-block\"};var innerContainerStyle={paddingBottom:\"16px\"};return/*#__PURE__*/React.createElement(\"div\",{style:containerStyle},/*#__PURE__*/React.createElement(\"h1\",{style:Styles.h1Style},\"Load Image\"),/*#__PURE__*/React.createElement(\"p\",null,\".bmp files only\"),/*#__PURE__*/React.createElement(\"div\",{style:innerContainerStyle},/*#__PURE__*/React.createElement(\"input\",{ref:\"fileInput\",type:\"file\",id:\"files\",name:\"file\",onChange:function onChange(){return _this2.loadImage();}})),/*#__PURE__*/React.createElement(\"img\",{src:this.state.previewUrl,style:Styles.imageStyle}));}},{key:\"loadImage\",value:function loadImage(){var _this3=this;var fileInput=this.refs.fileInput;var imageFile=fileInput.files[0];var fileReader=new FileReader();fileReader.readAsArrayBuffer(imageFile);fileReader.onloadend=function(){//get data from file\nvar result=fileReader.result;var rawData=new Uint8Array(result);State.setImageData(rawData);//put preview in component\nfileReader.readAsDataURL(imageFile);fileReader.onloadend=function(){_this3.setState({previewUrl:fileReader.result});};};}}]);return ImageLoader;}(React.Component);","map":{"version":3,"sources":["C:/Users/Tom/Documents/Repos/ImageGlitcher/image-glitcher/src/ImageLoader.tsx"],"names":["React","State","Colors","Styles","ImageLoader","state","previewUrl","containerStyle","padding","background","borderWidth","borderStyle","borderColor","border","display","innerContainerStyle","paddingBottom","h1Style","loadImage","imageStyle","fileInput","refs","imageFile","files","fileReader","FileReader","readAsArrayBuffer","onloadend","result","rawData","Uint8Array","setImageData","readAsDataURL","setState","Component"],"mappings":"4tBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,KAAsB,OAAtB,CACA,OAASC,MAAT,KAAuB,UAAvB,CACA,OAASC,MAAT,KAAuB,UAAvB,CAEA,UAAaC,CAAAA,WAAb,2VAEIC,KAFJ,CAEY,CAAEC,UAAU,CAAE,EAAd,CAFZ,8EAKI,iBACI,GAAIC,CAAAA,cAAoC,CACxC,CACIC,OAAO,CAAE,MADb,CAEIC,UAAU,CAAEP,MAAM,CAACO,UAFvB,CAGIC,WAAW,CAAE,CAHjB,CAIIC,WAAW,CAAE,OAJjB,CAKIC,WAAW,CAAEV,MAAM,CAACW,MALxB,CAMIC,OAAO,CAAE,cANb,CADA,CAUA,GAAIC,CAAAA,mBAAyC,CAC7C,CACIC,aAAa,CAAE,MADnB,CADA,CAKA,mBACI,2BAAK,KAAK,CAAET,cAAZ,eACI,0BAAI,KAAK,CAAEJ,MAAM,CAACc,OAAlB,eADJ,cAEI,+CAFJ,cAGI,2BAAK,KAAK,CAAEF,mBAAZ,eACI,6BAAO,GAAG,CAAC,WAAX,CAAuB,IAAI,CAAC,MAA5B,CAAmC,EAAE,CAAC,OAAtC,CAA8C,IAAI,CAAC,MAAnD,CAA0D,QAAQ,CAAE,0BAAM,CAAA,MAAI,CAACG,SAAL,EAAN,EAApE,EADJ,CAHJ,cAMI,2BAAK,GAAG,CAAE,KAAKb,KAAL,CAAWC,UAArB,CAAiC,KAAK,CAAEH,MAAM,CAACgB,UAA/C,EANJ,CADJ,CAUH,CA/BL,6CAkCI,iBACI,GAAIC,CAAAA,SAAS,CAAG,KAAKC,IAAL,CAAUD,SAA1B,CACA,GAAIE,CAAAA,SAAS,CAAGF,SAAS,CAACG,KAAV,CAAiB,CAAjB,CAAhB,CAEA,GAAIC,CAAAA,UAAU,CAAG,GAAIC,CAAAA,UAAJ,EAAjB,CACAD,UAAU,CAACE,iBAAX,CAA6BJ,SAA7B,EAEAE,UAAU,CAACG,SAAX,CAAuB,UACvB,CACI;AACA,GAAIC,CAAAA,MAAM,CAAGJ,UAAU,CAACI,MAAxB,CACA,GAAIC,CAAAA,OAAO,CAAG,GAAIC,CAAAA,UAAJ,CAAeF,MAAf,CAAd,CACA3B,KAAK,CAAC8B,YAAN,CAAmBF,OAAnB,EAEA;AACAL,UAAU,CAACQ,aAAX,CAAyBV,SAAzB,EAEAE,UAAU,CAACG,SAAX,CAAuB,UACvB,CACI,MAAI,CAACM,QAAL,CAAc,CAAC3B,UAAU,CAAEkB,UAAU,CAACI,MAAxB,CAAd,EACH,CAHD,CAIH,CAdD,CAeH,CAxDL,yBAAiC5B,KAAK,CAACkC,SAAvC","sourcesContent":["import React from 'react';\nimport { State } from './App';\nimport { Colors } from './Colors';\nimport { Styles } from './Styles';\n\nexport class ImageLoader extends React.Component\n{\n    state = { previewUrl: \"\" };\n\n    render()\n    {\n        let containerStyle : React.CSSProperties = \n        {\n            padding: \"16px\",\n            background: Colors.background,\n            borderWidth: 1,\n            borderStyle: \"solid\",\n            borderColor: Colors.border,\n            display: \"inline-block\"\n        };\n\n        let innerContainerStyle : React.CSSProperties = \n        {\n            paddingBottom: \"16px\"\n        };\n\n        return (\n            <div style={containerStyle}>\n                <h1 style={Styles.h1Style}>Load Image</h1>\n                <p>.bmp files only</p>\n                <div style={innerContainerStyle}>\n                    <input ref=\"fileInput\" type=\"file\" id=\"files\" name=\"file\" onChange={() => this.loadImage()}/>\n                </div>\n                <img src={this.state.previewUrl} style={Styles.imageStyle}/>\n            </div>\n        );\n    }\n\n    loadImage()\n    {\n        let fileInput = this.refs.fileInput as HTMLInputElement;\n        let imageFile = fileInput.files![0];\n        \n        let fileReader = new FileReader();\n        fileReader.readAsArrayBuffer(imageFile);\n\n        fileReader.onloadend = () =>\n        {\n            //get data from file\n            let result = fileReader.result as ArrayBuffer;\n            let rawData = new Uint8Array(result);\n            State.setImageData(rawData);\n\n            //put preview in component\n            fileReader.readAsDataURL(imageFile);\n\n            fileReader.onloadend = () =>\n            {\n                this.setState({previewUrl: fileReader.result});\n            }\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Tom\\\\Documents\\\\Repos\\\\ImageGlitcher\\\\image-glitcher\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Tom\\\\Documents\\\\Repos\\\\ImageGlitcher\\\\image-glitcher\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _createSuper from\"C:\\\\Users\\\\Tom\\\\Documents\\\\Repos\\\\ImageGlitcher\\\\image-glitcher\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _inherits from\"C:\\\\Users\\\\Tom\\\\Documents\\\\Repos\\\\ImageGlitcher\\\\image-glitcher\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import{State}from'./App';import{Colors}from'./Colors';import{Styles}from'./Styles';import ReactDOM from'react-dom';export var FramePreview=/*#__PURE__*/function(_React$Component){_inherits(FramePreview,_React$Component);var _super=_createSuper(FramePreview);function FramePreview(){_classCallCheck(this,FramePreview);return _super.apply(this,arguments);}_createClass(FramePreview,[{key:\"componentDidMount\",value:function componentDidMount(){FramePreview.instance=this;}},{key:\"render\",value:function render(){var _this=this;var containerStyle={padding:\"16px\",background:Colors.background,borderWidth:1,borderStyle:\"solid\",borderColor:Colors.border};var downloadContainerStyle={display:\"inline-block\"};var content=this.props.isLoading?\"Loading frames...\":this.props.downloads.map(function(download,key){return/*#__PURE__*/React.createElement(\"div\",{key:key,style:downloadContainerStyle},/*#__PURE__*/React.createElement(\"img\",{className:\"downloadImg\",src:download,style:Styles.imageStyle}),/*#__PURE__*/React.createElement(\"a\",{href:download,download:\"image.bmp\"},\"image-\"+key));});return/*#__PURE__*/React.createElement(\"div\",{style:containerStyle},/*#__PURE__*/React.createElement(\"h1\",{style:Styles.h1Style},\"Frames\"),content,/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return _this.createGif();}},\"Convert to GIF\"));}},{key:\"createGif\",value:function createGif(){var _this2=this;State.setAnimationLoadingState(true);//first find the actual image size of the first frame\nvar newImg=new Image();newImg.onload=function(){var width=newImg.width;var height=newImg.height;//@ts-ignore\nvar gif=new GIF({workers:2,quality:10,width:width,height:height});//add frames to gif\nvar imgElements=_this2.getImageElements();imgElements.forEach(function(img){gif.addFrame(img,{delay:10});});gif.on('finished',function(blob){var url=URL.createObjectURL(blob);State.setAnimationUrl(url);State.setAnimationLoadingState(false);});gif.render();};var firstImage=this.getImageElements()[0];newImg.src=firstImage.src;}//returns references to all the preview image elements in the download area\n},{key:\"getImageElements\",value:function getImageElements(){var thisNode=ReactDOM.findDOMNode(this);return Array.from(thisNode.getElementsByClassName('downloadImg'));}}]);return FramePreview;}(React.Component);FramePreview.instance=null;","map":{"version":3,"sources":["C:/Users/Tom/Documents/Repos/ImageGlitcher/image-glitcher/src/FramePreview.tsx"],"names":["React","State","Colors","Styles","ReactDOM","FramePreview","instance","containerStyle","padding","background","borderWidth","borderStyle","borderColor","border","downloadContainerStyle","display","content","props","isLoading","downloads","map","download","key","imageStyle","h1Style","createGif","setAnimationLoadingState","newImg","Image","onload","width","height","gif","GIF","workers","quality","imgElements","getImageElements","forEach","img","addFrame","delay","on","blob","url","URL","createObjectURL","setAnimationUrl","render","firstImage","src","thisNode","findDOMNode","Array","from","getElementsByClassName","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { State } from './App';\r\nimport { Colors } from './Colors';\r\nimport { Styles } from './Styles';\r\nimport ReactDOM from 'react-dom';\r\n\r\ninterface FramePreviewProps\r\n{\r\n    downloads : string[],\r\n    isLoading : boolean\r\n}\r\n\r\nexport class FramePreview extends React.Component<FramePreviewProps>\r\n{\r\n    static instance : FramePreview | null = null;\r\n\r\n    componentDidMount()\r\n    {\r\n        FramePreview.instance = this;\r\n    }\r\n\r\n    render()\r\n    {\r\n        let containerStyle : React.CSSProperties = \r\n        {\r\n            padding: \"16px\",\r\n            background: Colors.background,\r\n            borderWidth: 1,\r\n            borderStyle: \"solid\",\r\n            borderColor: Colors.border,\r\n        };\r\n\r\n        let downloadContainerStyle : React.CSSProperties = \r\n        {\r\n            display: \"inline-block\"\r\n        };\r\n\r\n        let content = this.props.isLoading ? \"Loading frames...\" : this.props.downloads.map((download, key) => \r\n            <div key={key} style={downloadContainerStyle}>\r\n                <img className=\"downloadImg\" src={download} style={Styles.imageStyle}></img>\r\n                <a href={download} download=\"image.bmp\">{\"image-\" + key}</a>\r\n            </div>\r\n        )\r\n        \r\n\r\n        return (\r\n            <div style={containerStyle}>\r\n                <h1 style={Styles.h1Style}>Frames</h1>\r\n                {content}\r\n                <br />\r\n                <button onClick={() => this.createGif()}>Convert to GIF</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    createGif()\r\n    {\r\n        State.setAnimationLoadingState(true);\r\n\r\n        //first find the actual image size of the first frame\r\n        var newImg = new Image();\r\n        newImg.onload = () =>\r\n        {\r\n            let width = newImg.width;\r\n            let height = newImg.height;\r\n\r\n            //@ts-ignore\r\n            let gif = new GIF(\r\n            {\r\n                workers: 2,\r\n                quality: 10,\r\n                width: width,\r\n                height: height\r\n            });\r\n\r\n            //add frames to gif\r\n            let imgElements = this.getImageElements();\r\n            imgElements.forEach(img => \r\n            {\r\n                gif.addFrame(img, {delay: 10});\r\n            });\r\n            \r\n            gif.on('finished', function(blob : Blob) \r\n            {\r\n                let url = URL.createObjectURL(blob);\r\n                State.setAnimationUrl(url);\r\n                State.setAnimationLoadingState(false);\r\n            });\r\n            \r\n            gif.render();\r\n        }\r\n\r\n        let firstImage = this.getImageElements()[0] as HTMLImageElement;\r\n        newImg.src = firstImage.src;\r\n    }\r\n\r\n    //returns references to all the preview image elements in the download area\r\n    getImageElements()\r\n    {\r\n        let thisNode = ReactDOM.findDOMNode(this)! as Element;\r\n        return Array.from(thisNode.getElementsByClassName('downloadImg'));\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tom\\\\Documents\\\\Repos\\\\ImageGlitcher\\\\image-glitcher\\\\src\\\\App.tsx\";\nimport React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      ref: \"fileInput\",\n      type: \"file\",\n      id: \"files\",\n      name: \"file\",\n      onChange: () => this.loadImage(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  loadImage() {\n    let fileInput = this.refs.fileInput;\n    let imageFile = fileInput.files[0];\n    let fileReader = new FileReader();\n    fileReader.readAsArrayBuffer(imageFile);\n\n    fileReader.onloadend = function () {\n      //get data from file\n      let result = fileReader.result;\n      let rawData = new Int16Array(result);\n      console.log(rawData); //decode data\n      //@ts-ignore\n\n      let decodedFile = alawmulaw.mulaw.decode(rawData);\n      console.log(decodedFile); //encode data\n      //@ts-ignore\n\n      let encodedFile = alawmulaw.mulaw.encode(decodedFile);\n      console.log(encodedFile);\n      this.saveByteArray(encodedFile, \"savedFile\");\n    };\n    /*\n    //check for the various File API support.\n    if(!(window.File && window.FileReader && window.FileList && window.Blob))\n    {\n        alert('The File APIs are not fully supported in this browser.');\n        return;\n    }\n    */\n\n  }\n\n  saveByteArray(data, name) {\n    let a = document.createElement(\"a\");\n    document.body.appendChild(a);\n    a.style.display = \"none\";\n    var blob = new Blob(data, {\n      type: \"octet/stream\"\n    }),\n        url = window.URL.createObjectURL(blob);\n    a.href = url;\n    a.download = name;\n    a.click();\n    window.URL.revokeObjectURL(url);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Tom/Documents/Repos/ImageGlitcher/image-glitcher/src/App.tsx"],"names":["React","App","Component","render","loadImage","fileInput","refs","imageFile","files","fileReader","FileReader","readAsArrayBuffer","onloadend","result","rawData","Int16Array","console","log","decodedFile","alawmulaw","mulaw","decode","encodedFile","encode","saveByteArray","data","name","a","document","createElement","body","appendChild","style","display","blob","Blob","type","url","window","URL","createObjectURL","href","download","click","revokeObjectURL"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,WAAP;;AAGA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CACA;AACIC,EAAAA,MAAM,GACN;AACI,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAO,MAAA,GAAG,EAAC,WAAX;AAAuB,MAAA,IAAI,EAAC,MAA5B;AAAmC,MAAA,EAAE,EAAC,OAAtC;AAA8C,MAAA,IAAI,EAAC,MAAnD;AAA0D,MAAA,QAAQ,EAAE,MAAM,KAAKC,SAAL,EAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADJ;AAKH;;AAEDA,EAAAA,SAAS,GACT;AACI,QAAIC,SAAS,GAAG,KAAKC,IAAL,CAAUD,SAA1B;AACA,QAAIE,SAAS,GAAGF,SAAS,CAACG,KAAV,CAAiB,CAAjB,CAAhB;AAEA,QAAIC,UAAU,GAAG,IAAIC,UAAJ,EAAjB;AACAD,IAAAA,UAAU,CAACE,iBAAX,CAA6BJ,SAA7B;;AAEAE,IAAAA,UAAU,CAACG,SAAX,GAAuB,YACvB;AACI;AACA,UAAIC,MAAM,GAAGJ,UAAU,CAACI,MAAxB;AACA,UAAIC,OAAO,GAAG,IAAIC,UAAJ,CAAeF,MAAf,CAAd;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ,EAJJ,CAMI;AACA;;AACA,UAAII,WAAW,GAAGC,SAAS,CAACC,KAAV,CAAgBC,MAAhB,CAAuBP,OAAvB,CAAlB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYC,WAAZ,EATJ,CAWI;AACA;;AACA,UAAII,WAAW,GAAGH,SAAS,CAACC,KAAV,CAAgBG,MAAhB,CAAuBL,WAAvB,CAAlB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYK,WAAZ;AAEA,WAAKE,aAAL,CAAmBF,WAAnB,EAAgC,WAAhC;AACH,KAlBD;AAoBA;;;;;;;;;AAWH;;AAEDE,EAAAA,aAAa,CAACC,IAAD,EAAaC,IAAb,EACb;AACI,QAAIC,CAAC,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAR;AACAD,IAAAA,QAAQ,CAACE,IAAT,CAAcC,WAAd,CAA0BJ,CAA1B;AACAA,IAAAA,CAAC,CAACK,KAAF,CAAQC,OAAR,GAAkB,MAAlB;AAEA,QAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASV,IAAT,EAAe;AAACW,MAAAA,IAAI,EAAE;AAAP,KAAf,CAAX;AAAA,QACIC,GAAG,GAAGC,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2BN,IAA3B,CADV;AAEAP,IAAAA,CAAC,CAACc,IAAF,GAASJ,GAAT;AACAV,IAAAA,CAAC,CAACe,QAAF,GAAahB,IAAb;AACAC,IAAAA,CAAC,CAACgB,KAAF;AACAL,IAAAA,MAAM,CAACC,GAAP,CAAWK,eAAX,CAA2BP,GAA3B;AACH;;AA/DL;;AAkEA,eAAepC,GAAf","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { render } from '@testing-library/react';\n\nclass App extends React.Component\n{\n    render()\n    {\n        return (\n            <div>\n            <input ref=\"fileInput\" type=\"file\" id=\"files\" name=\"file\" onChange={() => this.loadImage()}/>\n            </div>\n        );\n    }\n\n    loadImage()\n    {\n        let fileInput = this.refs.fileInput as HTMLInputElement;\n        let imageFile = fileInput.files![0];\n        \n        let fileReader = new FileReader();\n        fileReader.readAsArrayBuffer(imageFile);\n\n        fileReader.onloadend = function()\n        {\n            //get data from file\n            let result = fileReader.result as ArrayBuffer;\n            let rawData = new Int16Array(result);\n            console.log(rawData);\n\n            //decode data\n            //@ts-ignore\n            let decodedFile = alawmulaw.mulaw.decode(rawData);\n            console.log(decodedFile);\n\n            //encode data\n            //@ts-ignore\n            let encodedFile = alawmulaw.mulaw.encode(decodedFile);\n            console.log(encodedFile);\n\n            this.saveByteArray(encodedFile, \"savedFile\");\n        }\n        \n        /*\n        //check for the various File API support.\n        if(!(window.File && window.FileReader && window.FileList && window.Blob))\n        {\n            alert('The File APIs are not fully supported in this browser.');\n            return;\n        }\n        */\n\n\n\n    }\n\n    saveByteArray(data : any, name : string)\n    {\n        let a = document.createElement(\"a\");\n        document.body.appendChild(a);\n        a.style.display = \"none\";\n\n        var blob = new Blob(data, {type: \"octet/stream\"}),\n            url = window.URL.createObjectURL(blob);\n        a.href = url;\n        a.download = name;\n        a.click();\n        window.URL.revokeObjectURL(url);\n    };\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}